import lingo_modelo as modeloimport lingo_vista as vistaimport random### Class BotoneraControllerclass BotoneraController:    def __init__(self, modelo, vista):        self.modelo = modelo        self.vista = vista    def tratarBotonNueva(self):        try:            objetivo = self.modelo.nuevaPalabra()            self.vista.reiniciar()            if self.modelo.configuracion.aleatoria:                pista = random.randint(0, self.modelo.longitudPalabra - 1)            else:                pista = 0            self.vista.rellenarCasilla(pista, objetivo.getLetra(pista))            objetivo.letraColocada(pista)            self.vista.actualizarEstado(vista.MENS_AYUDA)            self.vista.repintarPuntuacion()        except modelo.NoDiccionarioException as e:            self.vista.error(e)    def darPista(self):        try:            objetivo = self.modelo.objetivo            posicionPista = objetivo.darPista()            letra = objetivo.getLetra(posicionPista)            self.vista.rellenarCasilla(posicionPista, letra)            self.modelo.otraPista()        except modelo.NoMasPistasException:            self.vista.noMasPistas()    def solucionar(self):        self.vista.resolver()    def salir(self):        self.vista.salir()    def pistaAleatoria(self):        self.modelo.alternarAleatoria()### Fin class BotoneraController### Class EntradaControllerclass EntradaController:    def __init__(self, modelo, vista):        self.modelo = modelo        self.vista = vista    def recibirEntrada(self, contenido, evento):        entrada = contenido.get()        jugada = self.modelo.jugar(entrada)        if jugada != None:            self.vista.pintarJugada()        else:            self.vista.entradaNoValida(entrada)        if self.modelo.estado.solucionada:            self.modelo.solucionar()            self.vista.solucionar()        else:            self.modelo.avanzarLinea()            self.vista.prepararLineaSiguiente()        self.vista.repintarPuntuacion()### Fin class EntradaController### Class MenuControllerclass MenuController:    def __init__(self, modelo):        self.modelo = modelo    def clicarMenu(self, nuevoValor):        self.modelo.nuevaLongitud(nuevoValor)### Fin class MenuController